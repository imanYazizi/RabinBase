openapi: 3.0.3
info:
  title: 'rabin pizza Docs'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://rabin.karo.studio'
paths:
  /api/address:
    get:
      summary: 'Show All Addresses'
      description: 'This endpoint shows all addresses of specific user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 3
                    client_id: 2
                    title: Home
                    address: 'USA , LA'
                    lat_lng: ''
                  -
                    id: 4
                    client_id: 2
                    title: 'Office '
                    address: 'Germany , Hamburg'
                    lat_lng: ''
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Addresses
    post:
      summary: 'Create Address'
      description: 'This endpoint creates address of specific user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  client_id: 2
                  title: Home
                  address: 'USA , LA'
                  lat_lng: ''
                properties:
                  id:
                    type: integer
                    example: 3
                  client_id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: Home
                  address:
                    type: string
                    example: 'USA , LA'
                  lat_lng:
                    type: string
                    example: ''
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Addresses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: ''
                  example: eius
                title:
                  type: string
                  description: ''
                  example: null
                lat_lng:
                  type: string
                  description: ''
                  example: et
              required:
                - address
                - lat_lng
  '/api/address/{id}':
    get:
      summary: 'Show One Address'
      description: "This endpoint shows one address\n<aside class=\"success\">Send address's id</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  client_id: 2
                  title: Home
                  address: 'USA , LA'
                  lat_lng: ''
                properties:
                  id:
                    type: integer
                    example: 3
                  client_id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: Home
                  address:
                    type: string
                    example: 'USA , LA'
                  lat_lng:
                    type: string
                    example: ''
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Addresses
    put:
      summary: 'Edit One Address'
      description: "This endpoint edits one address\n<aside class=\"success\">please send all items </aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  client_id: 2
                  title: Home
                  address: 'USA , LA'
                  lat_lng: ''
                properties:
                  id:
                    type: integer
                    example: 3
                  client_id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: Home
                  address:
                    type: string
                    example: 'USA , LA'
                  lat_lng:
                    type: string
                    example: ''
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Addresses
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: ''
                  example: null
                lat_lng:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Delete One Address'
      description: "This endpoint edits one address\n<aside class=\"success\">Send me the address's id</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'address deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'address deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Addresses
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 6
        required: true
        schema:
          type: integer
  /api/cart:
    post:
      summary: 'Create One Cart'
      description: "This endpoint creates one cart\n<aside class=\"success\">pizza_id = selfmade & item_id = Menu Item</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  client_id: 2
                  is_pay: false
                  total_price: 180
                  status: pending
                  address: null
                  carts:
                    -
                      id: 1
                      item_id:
                        id: 1
                        item_category_id: 1
                        image: ''
                        available: 1
                        name: peperroni
                        price: '25'
                        description: 'so good'
                        created_at: null
                        updated_at: null
                        deleted_at: null
                      is_menu: true
                      count: 6
                      amount: 150
                properties:
                  id:
                    type: integer
                    example: 1
                  client_id:
                    type: integer
                    example: 2
                  is_pay:
                    type: boolean
                    example: false
                  total_price:
                    type: integer
                    example: 180
                  status:
                    type: string
                    example: pending
                  address:
                    type: string
                    example: null
                  carts:
                    type: array
                    example:
                      -
                        id: 1
                        item_id:
                          id: 1
                          item_category_id: 1
                          image: ''
                          available: 1
                          name: peperroni
                          price: '25'
                          description: 'so good'
                          created_at: null
                          updated_at: null
                          deleted_at: null
                        is_menu: true
                        count: 6
                        amount: 150
                    items:
                      type: object
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected pizza id is invalid.'
                  errors:
                    pizza_id:
                      - 'The selected pizza id is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected pizza id is invalid.'
                  errors:
                    type: object
                    example:
                      pizza_id:
                        - 'The selected pizza id is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
                  description: ''
                  example: 8
                pizza_id:
                  type: string
                  description: 'This field is required when none of <code>item_id</code> are present.'
                  example: null
                item_id:
                  type: string
                  description: 'This field is required when none of <code>pizza_id</code> are present.'
                  example: null
              required:
                - count
  /api/favorite:
    get:
      summary: 'Show All Favorites'
      description: 'This endpoint shows all of the items that is favorite'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    is_menu: true
                    item_id:
                      id: 2
                      item_category_id: 1
                      image: mknjbh
                      available: 1
                      name: peperoni
                      price: '5'
                      description: ';.''lkjihugjhg'
                      created_at: null
                      updated_at: null
                      deleted_at: null
                  -
                    id: 2
                    is_menu: true
                    item_id:
                      id: 2
                      item_category_id: 1
                      image: mknjbh
                      available: 1
                      name: peperoni
                      price: '5'
                      description: ';.''lkjihugjhg'
                      created_at: null
                      updated_at: null
                      deleted_at: null
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Favorite
    post:
      summary: 'Favorite An Item'
      description: "This endpoint favorites an item (Menu item or selfmade pizza)\n <aside class=\"success\">for selfmade send pizza_id\nan if it's menu item send item_id</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  is_menu: true
                  item_id:
                    id: 2
                    item_category_id: 1
                    image: mknjbh
                    available: 1
                    name: peperoni
                    price: '5'
                    description: ';.''lkjihugjhg'
                    created_at: null
                    updated_at: null
                    deleted_at: null
                properties:
                  id:
                    type: integer
                    example: 2
                  is_menu:
                    type: boolean
                    example: true
                  item_id:
                    type: object
                    example:
                      id: 2
                      item_category_id: 1
                      image: mknjbh
                      available: 1
                      name: peperoni
                      price: '5'
                      description: ';.''lkjihugjhg'
                      created_at: null
                      updated_at: null
                      deleted_at: null
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The pizza id field is required when none of item id are present. (and 1 more error)'
                  errors:
                    pizza_id:
                      - 'The pizza id field is required when none of item id are present.'
                    item_id:
                      - 'The item id field is required when none of pizza id are present.'
                properties:
                  message:
                    type: string
                    example: 'The pizza id field is required when none of item id are present. (and 1 more error)'
                  errors:
                    type: object
                    example:
                      pizza_id:
                        - 'The pizza id field is required when none of item id are present.'
                      item_id:
                        - 'The item id field is required when none of pizza id are present.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Favorite
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pizza_id:
                  type: string
                  description: 'This field is required when none of <code>item_id</code> are present.'
                  example: null
                item_id:
                  type: string
                  description: 'This field is required when none of <code>pizza_id</code> are present.'
                  example: null
  '/api/favorite/{id}':
    delete:
      summary: 'Unfavorite An Item'
      description: 'This endpoint unfavorites an item (send favorite''s id)'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'item unfavorited successfully'
                properties:
                  message:
                    type: string
                    example: 'item unfavorited successfully'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Favorite
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the favorite.'
        example: 4
        required: true
        schema:
          type: integer
  /api/panel/landing:
    get:
      summary: 'Show All landings'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 3
                    type: text
                    key: about_title
                    value: 'about us'
                  -
                    id: 4
                    type: text
                    key: about_title
                    value: 'about us'
      tags:
        - Landing
    post:
      summary: 'create one landing'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  type: text
                  key: about_title
                  value: 'about us'
                properties:
                  id:
                    type: integer
                    example: 3
                  type:
                    type: string
                    example: text
                  key:
                    type: string
                    example: about_title
                  value:
                    type: string
                    example: 'about us'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - Landing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content_id:
                  type: string
                  description: ''
                  example: null
                key:
                  type: string
                  description: ''
                  example: ex
                type:
                  type: string
                  description: 'Must be one of <code>image</code> or <code>text</code>.'
                  example: text
                value:
                  type: string
                  description: ''
                  example: minima
              required:
                - key
                - type
                - value
  '/api/panel/landing/{id}':
    get:
      summary: 'show one landing'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  type: text
                  key: about_title
                  value: 'about us'
                properties:
                  id:
                    type: integer
                    example: 3
                  type:
                    type: string
                    example: text
                  key:
                    type: string
                    example: about_title
                  value:
                    type: string
                    example: 'about us'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - Landing
    put:
      summary: 'edit one landing'
      description: "@response scenario=success\n{\n\"id\": 3,\n\"type\": \"text\",\n\"key\": \"about_title\",\n\"value\": \"about us\"\n}"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - Landing
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: null
                value:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'delete one landing'
      description: '@response scenario=success {"message" : "landing deleted successfully"}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - Landing
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the landing.'
        example: 1
        required: true
        schema:
          type: integer
  /api/menu:
    get:
      summary: 'Show all foods in the menu'
      description: 'This endpoint Sends you all foods.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "[\n{\n\"id\": 2,\n\"category\": \"pizza\",\n\"image\": \"http://127.0.0.1:8000/storage/mknjbh\",\n\"available\": true,\n\"name\": \"peperoni\",\n\"price\": \"5\",\n\"description\": \"very delicious\"\n},\n{\n\"id\": 3,\n\"category\": \"hamburger\",\n\"image\": \"http://127.0.0.1:8000/storage/AS\",\n\"available\": true,\n\"name\": \"cheeseburger\",\n\"price\": \"6\",\n\"description\": \"delicious\"\n},\n]"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Menu
  '/api/menu/{id}':
    get:
      summary: 'Show one menu item'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 2
                    category: pizza
                    image: 'http://127.0.0.1:8000/storage/mknjbh'
                    available: true
                    name: peperoni
                    price: '5'
                    description: 'very delicious'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Menu
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu.'
        example: enim
        required: true
        schema:
          type: string
  /api/special_items:
    get:
      summary: 'Show all special items'
      description: "This endpoint sends you foods of the specific category.\n<aside class=\"success\">Send me category id.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 2
                    category: pizza
                    image: 'http://127.0.0.1:8000/storage/mknjbh'
                    available: true
                    is_special: true
                    name: peperoni
                    price: '5'
                    description: 'very delicious'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Menu
  /api/menu_category:
    get:
      summary: 'Show All Menu''s Category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/image.png'
                    name: pizza
                  -
                    id: 2
                    image: 'http://127.0.0.1:8000/storage/jlhv'
                    name: hamburger
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Menu category'
  '/api/menu_category/{id}':
    get:
      summary: 'Show foods of a category in the menu'
      description: "This endpoint sends you foods of the specific category.\n<aside class=\"success\">Send me category id.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"pizza\": [\n{\n\"id\": 2,\n\"item_category_id\": 1,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"5\",\n\"description\": \"good\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null,\n\"category\": {\n\"id\": 1,\n\"image\": \"\",\n\"name\": \"pizza\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null\n}\n}\n],\n\"hamburger\": [\n{\n\"id\": 3,\n\"item_category_id\": 2,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"6\",\n\"description\": \"bad\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null,\n\"category\": {\n\"id\": 2,\n\"image\": \"\",\n\"name\": \"hamburger\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null\n}\n},\n]\n}"
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu category'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu category.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/active_order:
    get:
      summary: Cart
      description: 'This endpoint shows active order'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  client_id: 1
                  is_pay: false
                  total_price: 0
                  status: null
                  address:
                    id: 1
                    client_id: 1
                    title: l;kjh
                    address: ;klj
                    lat_lng: ''
                  carts: []
                properties:
                  id:
                    type: integer
                    example: 2
                  client_id:
                    type: integer
                    example: 1
                  is_pay:
                    type: boolean
                    example: false
                  total_price:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: null
                  address:
                    type: object
                    example:
                      id: 1
                      client_id: 1
                      title: l;kjh
                      address: ;klj
                      lat_lng: ''
                  carts:
                    type: array
                    example: []
      tags:
        - Order
  /api/order:
    get:
      summary: 'Order History'
      description: 'This endpoint shows all orders'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "[\n{\n\"id\": 1,\n\"client_id\": 1,\n\"is_pay\": false,\n\"total_price\": 60,\n\"status\": 'sent',\n\"address\": {\n\"id\": 1,\n\"client_id\": 1,\n\"title\": \"home\",\n\"address\": \"canada\",\n\"lat_lng\": \"\"\n},\n\"carts\": [\n{\n\"id\": 1,\n\"item_id\": {\n\"id\": 2,\n\"item_category_id\": 1,\n\"image\": \"mknjbh\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"5\",\n\"description\": \";.'lkjihugjhg\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null\n},\n\"is_menu\": true,\n\"count\": 6,\n\"amount\": 30\n},\n{\n\"id\": 2,\n\"item_id\": {\n\"id\": 3,\n\"item_category_id\": 2,\n\"image\": \"AS\",\n\"available\": 1,\n\"name\": \"QWE\",\n\"price\": \"6\",\n\"description\": \"QWE\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null\n},\n\"is_menu\": true,\n\"count\": 5,\n\"amount\": 30\n}\n]\n},"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Order
    post:
      summary: 'Add address to cart'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  client_id: 1
                  is_pay: false
                  total_price: 0
                  status: null
                  address:
                    id: 1
                    client_id: 1
                    title: l;kjh
                    address: ;klj
                    lat_lng: ''
                  carts: []
                properties:
                  id:
                    type: integer
                    example: 2
                  client_id:
                    type: integer
                    example: 1
                  is_pay:
                    type: boolean
                    example: false
                  total_price:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: null
                  address:
                    type: object
                    example:
                      id: 1
                      client_id: 1
                      title: l;kjh
                      address: ;klj
                      lat_lng: ''
                  carts:
                    type: array
                    example: []
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address_id:
                  type: string
                  description: ''
                  example: est
              required:
                - address_id
  /api/panel/users:
    get:
      summary: 'Show Users And Admins'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 3
                    name: null
                    avatar: null
                    username: null
                    country_id: 1
                    phone: '09358548353'
                    email: nicolas.eric@example.org
                    reset_link: null
                    phone_code: null
                    email_code: bdK8ZIhe3j
                    is_phone_verify: 1
                    is_email_verify: 0
                    is_admin: false
                  -
                    id: 22
                    image: ''
                    name: ziz
                    country_id: 1
                    phone: '9358548353'
                    role: edit
                    is_admin: true
                  -
                    id: 2
                    name: zeinab
                    avatar: files/1649859720-859727325.png
                    username: zizi
                    country_id: 1
                    phone: '2'
                    email: hand.annamarie@example.org
                    reset_link: CzUsyVDrqN
                    phone_code: huJXcMd7rf
                    email_code: EtmzkoYH2R
                    is_phone_verify: 0
                    is_email_verify: 0
                    is_admin: false
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel All Users'
  /api/panel/content:
    get:
      summary: 'Show all content'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    title: 'about us'
                    description: 'hello , this is our website'
                  -
                    id: 2
                    title: 'about us'
                    description: 'hello , this is our website'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Content'
    post:
      summary: 'create one content'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  title: 'about us'
                  description: 'hello , this is our website'
                properties:
                  id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: 'about us'
                  description:
                    type: string
                    example: 'hello , this is our website'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Content'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: dolor
                description:
                  type: string
                  description: ''
                  example: libero
              required:
                - title
                - description
  '/api/panel/content/{id}':
    get:
      summary: 'Show one content'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  title: 'about us'
                  description: 'hello , this is our website'
                properties:
                  id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: 'about us'
                  description:
                    type: string
                    example: 'hello , this is our website'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected title is invalid.'
                  errors:
                    phone:
                      - 'The selected title is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected title is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected title is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Content'
    put:
      summary: 'edit one content'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  title: 'about us'
                  description: 'hello , this is our website'
                properties:
                  id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: 'about us'
                  description:
                    type: string
                    example: 'hello , this is our website'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected title is invalid.'
                  errors:
                    phone:
                      - 'The selected title is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected title is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected title is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Content'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: null
                description:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'delete one content'
      description: '@response scenario=success {"message" : "content deleted successfully"}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Content'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the content.'
        example: 12
        required: true
        schema:
          type: integer
  /api/all_country:
    get:
      summary: 'Show All Countries'
      description: 'This endpoint shows all countries'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/gvjgvgv'
                    code: '1'
                    name: canada
                  -
                    id: 2
                    image: 'http://127.0.0.1:8000/storage/iji'
                    code: '1'
                    name: USA
      tags:
        - 'Panel Country'
      security: []
  /api/panel/country:
    post:
      summary: 'Create One Country'
      description: 'This endpoint creates one Country'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  image: 'http://127.0.0.1:8000/storage/files/1649160294-516619164.png'
                  code: '49'
                  name: germany
                properties:
                  id:
                    type: integer
                    example: 3
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649160294-516619164.png'
                  code:
                    type: string
                    example: '49'
                  name:
                    type: string
                    example: germany
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The image field is required.'
                  errors:
                    image:
                      - 'The image field is required.'
                properties:
                  message:
                    type: string
                    example: 'The image field is required.'
                  errors:
                    type: object
                    example:
                      image:
                        - 'The image field is required.'
      tags:
        - 'Panel Country'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: illum
                code:
                  type: integer
                  description: ''
                  example: 13
              required:
                - image
                - name
                - code
  /api/panel/ingredient:
    get:
      summary: 'Show all ingredients'
      description: ''
      parameters:
        -
          in: query
          name: category_id
          description: 'to show ingredients of a category .'
          example: et
          required: false
          schema:
            type: string
            description: 'to show ingredients of a category .'
            example: et
        -
          in: query
          name: count
          description: 'to show last N ingredients  .'
          example: tempora
          required: false
          schema:
            type: string
            description: 'to show last N ingredients  .'
            example: tempora
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                    name: cheese
                    amount: 200gr
                    price: '5.3'
                    description: null
                  -
                    id: 3
                    image: 'http://127.0.0.1:8000/storage/files/1650706701-287947386.png'
                    name: cheese2
                    amount: 20gr
                    price: '5.3'
                    description: null
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Ingredient'
    post:
      summary: 'Create one ingredient'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                  name: cheese
                  amount: 20gr
                  price: '5.3'
                  description: null
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                  name:
                    type: string
                    example: cheese
                  amount:
                    type: string
                    example: 20gr
                  price:
                    type: string
                    example: '5.3'
                  description:
                    type: string
                    example: null
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected item_category_id is invalid.'
                  errors:
                    item_category_id:
                      - 'The selected item_category_id is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected item_category_id is invalid.'
                  errors:
                    type: object
                    example:
                      item_category_id:
                        - 'The selected item_category_id is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Ingredient'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ingredient_category_id:
                  type: string
                  description: ''
                  example: ipsam
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: dolor
              required:
                - ingredient_category_id
                - image
                - name
  '/api/panel/ingredient/{id}':
    get:
      summary: 'Show one ingredient'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                  name: cheese
                  amount: 20gr
                  price: '5.3'
                  description: null
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                  name:
                    type: string
                    example: cheese
                  amount:
                    type: string
                    example: 20gr
                  price:
                    type: string
                    example: '5.3'
                  description:
                    type: string
                    example: null
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Ingredient'
    put:
      summary: 'Edit one ingredient'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                  name: cheese
                  amount: 20gr
                  price: '5.3'
                  description: null
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1650706364-1792862385.png'
                  name:
                    type: string
                    example: cheese
                  amount:
                    type: string
                    example: 20gr
                  price:
                    type: string
                    example: '5.3'
                  description:
                    type: string
                    example: null
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected phone is invalid.'
                  errors:
                    phone:
                      - 'The selected phone is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected phone is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected phone is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Ingredient'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ingredient_category_id:
                  type: string
                  description: ''
                  example: null
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Delete one ingredient'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'ingredient deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'ingredient deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Ingredient'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ingredient.'
        example: 8
        required: true
        schema:
          type: integer
  /api/panel/item_ingredient:
    post:
      summary: 'add one ingredient to men item'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'ingredient deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'ingredient deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Ingredient'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: unde
                ingredient_id:
                  type: string
                  description: ''
                  example: eaque
                amount:
                  type: string
                  description: ''
                  example: deserunt
              required:
                - item_id
                - ingredient_id
                - amount
  /api/panel/ingredient_category:
    get:
      summary: 'Show All ingredient''s Category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                    name: topping
                  -
                    id: 2
                    image: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                    name: topping
                  -
                    id: 3
                    image: 'http://127.0.0.1:8000/storage/files/1649266590-1689863156.png'
                    name: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Ingredient Category'
    post:
      summary: 'Create ingredient category'
      description: 'this will create a category in ingredient'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  image: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                  name: topping
                properties:
                  id:
                    type: integer
                    example: 2
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                  name:
                    type: string
                    example: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Ingredient Category'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: numquam
              required:
                - image
                - name
  '/api/panel/ingredient_category/{id}':
    get:
      summary: 'Show one ingredient''s category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name: topping
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name:
                    type: string
                    example: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Ingredient Category'
    put:
      summary: 'Edit ingredient''s category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name: topping
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name:
                    type: string
                    example: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Ingredient Category'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Delete ingredient''s category'
      description: '@response scenario=success {"message" : "ingredient category deleted successfully"}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Ingredient Category'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ingredient category.'
        example: culpa
        required: true
        schema:
          type: string
  /api/panel/menus:
    get:
      summary: 'Show All Menu'
      description: "to get items of a category use :\n <aside class=\"success\">{url}/api/panel/menus?category_id=5</aside>"
      parameters:
        -
          in: query
          name: category_id
          description: 'to show items of a category .'
          example: fuga
          required: false
          schema:
            type: string
            description: 'to show items of a category .'
            example: fuga
        -
          in: query
          name: count
          description: 'to show last n items  .'
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'to show last n items  .'
            example: voluptatem
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"pizza\": [\n{\n\"id\": 2,\n\"item_category_id\": 1,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"5\",\n\"description\": \"good\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null,\n\"category\": {\n\"id\": 1,\n\"image\": \"\",\n\"name\": \"pizza\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null\n}\n}\n],\n\"hamburger\": [\n{\n\"id\": 3,\n\"item_category_id\": 2,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"6\",\n\"description\": \"bad\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null,\n\"category\": {\n\"id\": 2,\n\"image\": \"\",\n\"name\": \"hamburger\",\n\"created_at\": null,\n\"updated_at\": null,\n\"deleted_at\": null\n}\n},\n]\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu'
    post:
      summary: 'Create one menu'
      description: 'this will create an item in menu'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"id\": 3,\n\"item_category_id\": 2,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"6\",\n\"description\": \"hot\",\n\"category\": {\n\"id\": 2,\n\"image\": \"\",\n\"name\": \"hamburger\",\n}"
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected item_category_id is invalid.'
                  errors:
                    item_category_id:
                      - 'The selected item_category_id is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected item_category_id is invalid.'
                  errors:
                    type: object
                    example:
                      item_category_id:
                        - 'The selected item_category_id is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: dicta
                price:
                  type: string
                  description: ''
                  example: sed
                description:
                  type: string
                  description: ''
                  example: quod
                item_category_id:
                  type: integer
                  description: ''
                  example: 15
                available:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
                is_special:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
                ingredients:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - price
                - description
                - item_category_id
                - available
                - is_special
  '/api/panel/menus/{id}':
    get:
      summary: 'Show one menu item'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"id\": 3,\n\"item_category_id\": 2,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"6\",\n\"description\": \"hot\",\n\"category\": {\n\"id\": 2,\n\"image\": \"\",\n\"name\": \"hamburger\",\n}"
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu'
    put:
      summary: 'Edit menu item'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"id\": 3,\n\"item_category_id\": 2,\n\"image\": \"\",\n\"available\": 1,\n\"name\": \"peperoni\",\n\"price\": \"6\",\n\"description\": \"hot\",\n\"category\": {\n\"id\": 2,\n\"image\": \"\",\n\"name\": \"hamburger\",\n}"
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected phone is invalid.'
                  errors:
                    phone:
                      - 'The selected phone is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected phone is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected phone is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: null
                price:
                  type: string
                  description: ''
                  example: null
                description:
                  type: string
                  description: ''
                  example: null
                item_category_id:
                  type: integer
                  description: ''
                  example: 14
                available:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
                is_special:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
    delete:
      summary: 'Delete one menu item'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'item deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'item deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Menu'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu.'
        example: ut
        required: true
        schema:
          type: string
  /api/panel/menu_category:
    get:
      summary: 'Show All Menu''s Category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/image.png'
                    name: pizza
                  -
                    id: 2
                    image: 'http://127.0.0.1:8000/storage/jlhv'
                    name: hamburger
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu Category'
    post:
      summary: 'Create menu category'
      description: 'this will create a category in menu'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/image.png'
                  name: pizza
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/image.png'
                  name:
                    type: string
                    example: pizza
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The image field is required.'
                  errors:
                    image:
                      - 'The image field is required.'
                properties:
                  message:
                    type: string
                    example: 'The image field is required.'
                  errors:
                    type: object
                    example:
                      image:
                        - 'The image field is required.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu Category'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: itaque
                type:
                  type: string
                  description: ''
                  example: null
              required:
                - image
                - name
  '/api/panel/menu_category/{id}':
    get:
      summary: 'Show one menu''s category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/image.png'
                  name: pizza
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/image.png'
                  name:
                    type: string
                    example: pizza
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu Category'
    put:
      summary: 'Edit menu''s category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/image.png'
                  name: pizza
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/image.png'
                  name:
                    type: string
                    example: pizza
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The image field is required.'
                  errors:
                    image:
                      - 'The image field is required.'
                properties:
                  message:
                    type: string
                    example: 'The image field is required.'
                  errors:
                    type: object
                    example:
                      image:
                        - 'The image field is required.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Menu Category'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Delete menu''s category'
      description: '@response scenario=success {"message" : "menu category deleted successfully"}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Menu Category'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu category.'
        example: et
        required: true
        schema:
          type: string
  /api/panel/selfmades:
    get:
      summary: 'Show All selfmades'
      description: "to get items of a category use :\n<aside class=\"success\">{url}/api/panel/selfmades?category_id=1</aside>"
      parameters:
        -
          in: query
          name: category_id
          description: 'to show selfmades of a category .'
          example: est
          required: false
          schema:
            type: string
            description: 'to show selfmades of a category .'
            example: est
        -
          in: query
          name: count
          description: 'to show last N selfmades  .'
          example: beatae
          required: false
          schema:
            type: string
            description: 'to show last N selfmades  .'
            example: beatae
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    category:
                      id: 1
                      image: 'https://rabin.karo.studio/storage/files/1649935818-609770772.png'
                      name: test
                    items: []
                  -
                    category:
                      id: 2
                      image: 'https://rabin.karo.studio/storage/files/1649938458-516340118.png'
                      name: Proteins
                    items:
                      -
                        id: 9
                        category: Proteins
                        image: 'https://rabin.karo.studio/storage/files/1649939385-1614994750.png'
                        name: Turkey
                        price: '5'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 10
                        category: Proteins
                        image: 'https://rabin.karo.studio/storage/files/1649939399-1584526436.png'
                        name: Peperoni
                        price: '4'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 11
                        category: Proteins
                        image: 'https://rabin.karo.studio/storage/files/1649939421-1942282979.png'
                        name: 'Ham Pork'
                        price: '9'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 12
                        category: Proteins
                        image: 'https://rabin.karo.studio/storage/files/1649939443-849350251.png'
                        name: Bacon
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 13
                        category: Proteins
                        image: 'https://rabin.karo.studio/storage/files/1649939458-751912540.png'
                        name: Shrimp
                        price: '5'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                  -
                    category:
                      id: 4
                      image: 'https://rabin.karo.studio/storage/files/1649938489-1442248704.png'
                      name: Toppings
                    items:
                      -
                        id: 4
                        category: Toppings
                        image: 'https://rabin.karo.studio/storage/files/1649939063-1911919153.png'
                        name: Onion
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 5
                        category: Toppings
                        image: 'https://rabin.karo.studio/storage/files/1649939087-657905889.png'
                        name: 'Bell peper'
                        price: '5'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 6
                        category: Toppings
                        image: 'https://rabin.karo.studio/storage/files/1649939106-723479123.png'
                        name: Tomato
                        price: '3'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 7
                        category: Toppings
                        image: 'https://rabin.karo.studio/storage/files/1649939124-1682604317.png'
                        name: Mushrooms
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 8
                        category: Toppings
                        image: 'https://rabin.karo.studio/storage/files/1649939144-1955042652.png'
                        name: 'Chili peper'
                        price: '1'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                  -
                    category:
                      id: 5
                      image: 'https://rabin.karo.studio/storage/files/1649938513-578878224.png'
                      name: Base
                    items:
                      -
                        id: 1
                        category: Base
                        image: 'https://rabin.karo.studio/storage/files/1649938722-155651557.png'
                        name: mini
                        price: '1'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 2
                        category: Base
                        image: 'https://rabin.karo.studio/storage/files/1649938810-1674898215.png'
                        name: medium
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 3
                        category: Base
                        image: 'https://rabin.karo.studio/storage/files/1649938829-1462934484.png'
                        name: Big
                        price: '3'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                  -
                    category:
                      id: 6
                      image: 'https://rabin.karo.studio/storage/files/1649938525-886795885.png'
                      name: sauce
                    items:
                      -
                        id: 14
                        category: sauce
                        image: 'https://rabin.karo.studio/storage/files/1649940048-459027458.png'
                        name: Ketchub
                        price: '1'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 15
                        category: sauce
                        image: 'https://rabin.karo.studio/storage/files/1649940064-2042544871.png'
                        name: 'Hot chili'
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 16
                        category: sauce
                        image: 'https://rabin.karo.studio/storage/files/1649940080-1194826427.png'
                        name: Garlic
                        price: '3'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 17
                        category: sauce
                        image: 'https://rabin.karo.studio/storage/files/1649940103-397906002.png'
                        name: Pesto
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 18
                        category: sauce
                        image: 'https://rabin.karo.studio/storage/files/1649940160-1695644124.png'
                        name: BBQ
                        price: '1'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                  -
                    category:
                      id: 7
                      image: 'https://rabin.karo.studio/storage/files/1649938535-938803222.png'
                      name: Cheese
                    items:
                      -
                        id: 19
                        category: Cheese
                        image: 'https://rabin.karo.studio/storage/files/1649940331-995937756.png'
                        name: Gouda
                        price: '3'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 20
                        category: Cheese
                        image: 'https://rabin.karo.studio/storage/files/1649940345-418905076.png'
                        name: Cheddar
                        price: '4'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
                      -
                        id: 21
                        category: Cheese
                        image: 'https://rabin.karo.studio/storage/files/1649940379-1221406781.png'
                        name: Mozzarella
                        price: '2'
                        amount_1x: '15'
                        amount_2x: '17'
                        amount_3x: '10'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Selfmade'
    post:
      summary: 'Create one selfmade'
      description: 'this will create a selfmade'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  category: topping
                  image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                  name: oninon
                  price: '17'
                  amount_1x: '2'
                  amount_2x: '13'
                  amount_3x: '3'
                properties:
                  id:
                    type: integer
                    example: 2
                  category:
                    type: string
                    example: topping
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                  name:
                    type: string
                    example: oninon
                  price:
                    type: string
                    example: '17'
                  amount_1x:
                    type: string
                    example: '2'
                  amount_2x:
                    type: string
                    example: '13'
                  amount_3x:
                    type: string
                    example: '3'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Selfmade'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: dolorem
                price:
                  type: string
                  description: ''
                  example: inventore
                amount_1x:
                  type: string
                  description: ''
                  example: odit
                amount_2x:
                  type: string
                  description: ''
                  example: dolorem
                amount_3x:
                  type: string
                  description: ''
                  example: aspernatur
                selfmade_category_id:
                  type: integer
                  description: ''
                  example: 2
              required:
                - image
                - name
                - price
                - amount_1x
                - amount_2x
                - amount_3x
                - selfmade_category_id
  '/api/panel/selfmades/{id}':
    get:
      summary: 'Show one self made'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  category: topping
                  image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                  name: oninon
                  price: '17'
                  amount_1x: '2'
                  amount_2x: '13'
                  amount_3x: '3'
                properties:
                  id:
                    type: integer
                    example: 2
                  category:
                    type: string
                    example: topping
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                  name:
                    type: string
                    example: oninon
                  price:
                    type: string
                    example: '17'
                  amount_1x:
                    type: string
                    example: '2'
                  amount_2x:
                    type: string
                    example: '13'
                  amount_3x:
                    type: string
                    example: '3'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Selfmade'
    put:
      summary: 'Edit self made'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  category: topping
                  image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                  name: oninon
                  price: '17'
                  amount_1x: '2'
                  amount_2x: '13'
                  amount_3x: '3'
                properties:
                  id:
                    type: integer
                    example: 2
                  category:
                    type: string
                    example: topping
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                  name:
                    type: string
                    example: oninon
                  price:
                    type: string
                    example: '17'
                  amount_1x:
                    type: string
                    example: '2'
                  amount_2x:
                    type: string
                    example: '13'
                  amount_3x:
                    type: string
                    example: '3'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Selfmade'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: null
                price:
                  type: string
                  description: ''
                  example: null
                amount_1x:
                  type: string
                  description: ''
                  example: null
                amount_2x:
                  type: string
                  description: ''
                  example: null
                amount_3x:
                  type: string
                  description: ''
                  example: null
                selfmade_category_id:
                  type: integer
                  description: ''
                  example: 8
    delete:
      summary: 'Delete one self made'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'selfmade deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'selfmade deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Selfmade'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the selfmade.'
        example: 2
        required: true
        schema:
          type: integer
  /api/panel/selfmade_category:
    get:
      summary: 'Show All Selfmade''s Category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                    name: topping
                  -
                    id: 2
                    image: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                    name: topping
                  -
                    id: 3
                    image: 'http://127.0.0.1:8000/storage/files/1649266590-1689863156.png'
                    name: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Selfmade Category'
    post:
      summary: 'Create selfmade category'
      description: 'this will create a category in selfmade'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  image: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                  name: topping
                properties:
                  id:
                    type: integer
                    example: 2
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                  name:
                    type: string
                    example: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Selfmade Category'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: esse
                type:
                  type: string
                  description: ''
                  example: null
              required:
                - image
                - name
  '/api/panel/selfmade_category/{id}':
    get:
      summary: 'Show one selfmade''s category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name: topping
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name:
                    type: string
                    example: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Selfmade Category'
    put:
      summary: 'Edit selfmade''s category'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name: topping
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                  name:
                    type: string
                    example: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Selfmade Category'
    delete:
      summary: 'Delete selfmade''s category'
      description: '@response scenario=success {"message" : "selfmade category deleted successfully"}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Selfmade Category'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the selfmade category.'
        example: aut
        required: true
        schema:
          type: string
  /api/panel/client:
    get:
      summary: 'Show All Users'
      description: ''
      parameters:
        -
          in: query
          name: count
          description: ''
          example: non
          required: false
          schema:
            type: string
            description: ''
            example: non
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 2
                    image: ''
                    name: zeinab
                    phone: '9129612721'
                    email: zeinab@gmail.com
                    orders: []
                  -
                    id: 3
                    image: ''
                    name: zeinab
                    phone: '9129612722'
                    email: yari@gmail.com
                    orders: []
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Users'
    post:
      summary: 'Create User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  image: ''
                  name: zeinab
                  phone: '9129612721'
                  email: zeinab@gmail.com
                  orders: []
                properties:
                  id:
                    type: integer
                    example: 2
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zeinab
                  phone:
                    type: string
                    example: '9129612721'
                  email:
                    type: string
                    example: zeinab@gmail.com
                  orders:
                    type: array
                    example: []
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    country_id:
                      - 'The selected country id is invalid.'
                    password:
                      - 'The password must be at least 8.'
                    re_try_Password:
                      - 'The re try  password and password must match.'
                properties:
                  message:
                    type: string
                    example: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    type: object
                    example:
                      country_id:
                        - 'The selected country id is invalid.'
                      password:
                        - 'The password must be at least 8.'
                      re_try_Password:
                        - 'The re try  password and password must match.'
      tags:
        - 'Panel Users'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatem
                phone:
                  type: integer
                  description: 'This field is required when none of <code>email</code> are present.'
                  example: 14
                email:
                  type: string
                  description: 'This field is required when none of <code>phone</code> are present.  Must be a valid email address.'
                  example: eabbott@example.com
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                country_id:
                  type: integer
                  description: ''
                  example: 15
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: wjq
                re_try_Password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: quae
              required:
                - name
                - country_id
                - password
                - re_try_Password
  '/api/panel/client/{id}':
    get:
      summary: 'Show one user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  image: ''
                  name: zeinab
                  phone: '9129612721'
                  email: zeinab@gmail.com
                  orders: []
                properties:
                  id:
                    type: integer
                    example: 2
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zeinab
                  phone:
                    type: string
                    example: '9129612721'
                  email:
                    type: string
                    example: zeinab@gmail.com
                  orders:
                    type: array
                    example: []
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'Panel Users'
    put:
      summary: 'Edit User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  image: ''
                  name: zeinab
                  phone: '9129612721'
                  email: zeinab@gmail.com
                  orders: []
                properties:
                  id:
                    type: integer
                    example: 2
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zeinab
                  phone:
                    type: string
                    example: '9129612721'
                  email:
                    type: string
                    example: zeinab@gmail.com
                  orders:
                    type: array
                    example: []
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    country_id:
                      - 'The selected country id is invalid.'
                    password:
                      - 'The password must be at least 8.'
                    re_try_Password:
                      - 'The re try  password and password must match.'
                properties:
                  message:
                    type: string
                    example: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    type: object
                    example:
                      country_id:
                        - 'The selected country id is invalid.'
                      password:
                        - 'The password must be at least 8.'
                      re_try_Password:
                        - 'The re try  password and password must match.'
      tags:
        - 'Panel Users'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                phone:
                  type: integer
                  description: ''
                  example: 3
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: shanny.hartmann@example.net
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                country_id:
                  type: integer
                  description: ''
                  example: 2
    delete:
      summary: 'Delete one user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'user deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'user deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Panel Users'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the client.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/change_password/{reset_link}':
    post:
      summary: 'Change Password'
      description: 'send reset link with new password and confirm password'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'password changed successfully'
                properties:
                  message:
                    type: string
                    example: 'password changed successfully'
        404:
          description: 'user not found (wrong reset link)'
          content:
            text/plain:
              schema:
                type: string
                example: 'user not found (wrong reset link)'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The new password must be at least 8. (and 1 more error)'
                  errors:
                    new_password:
                      - 'The new password must be at least 8.'
                    confirm_password:
                      - 'The confirm password and password must match.'
                properties:
                  message:
                    type: string
                    example: 'The new password must be at least 8. (and 1 more error)'
                  errors:
                    type: object
                    example:
                      new_password:
                        - 'The new password must be at least 8.'
                      confirm_password:
                        - 'The confirm password and password must match.'
      tags:
        - Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: fpbcgoff
                confirm_password:
                  type: string
                  description: 'The value and <code>new_password</code> must match.'
                  example: excepturi
              required:
                - new_password
                - confirm_password
    parameters:
      -
        in: path
        name: reset_link
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  /api/forget_password:
    post:
      summary: 'Forget password'
      description: 'send link for forget password'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: '{"message" :''reset link sent successfully''}'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The selected email is invalid.'
      tags:
        - Password
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'This field is required when none of <code>email</code> are present.'
                  example: null
                email:
                  type: string
                  description: 'This field is required when none of <code>phone</code> are present.'
                  example: null
  /api/current_password:
    post:
      summary: 'Current password'
      description: "Check if current password is correct\n<aside class=\"success\">if password is correct this will send you a link that you should use in change_password</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'success{'
          content:
            text/plain:
              schema:
                type: string
                example: '"reset_link": "WbEITkE4xx"}'
        400:
          description: 'wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'wrong password'
                properties:
                  message:
                    type: string
                    example: 'wrong password'
      tags:
        - Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: vitae
              required:
                - current_password
  /api/pizza:
    get:
      summary: 'Show All pizzas'
      description: 'This endpoint shows all selfmade pizzas of login user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: soluta
                    price: '5'
                    selfmades:
                      -
                        id: 1
                        category: topping
                        image: 'http://127.0.0.1:8000/storage/files/1649269045-111627720.png'
                        name: oninon
                        price: '17'
                        amount_1x: '2'
                        amount_2x: '13'
                        amount_3x: '3'
                      -
                        id: 2
                        category: topping
                        image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                        name: oninon
                        price: '17'
                        amount_1x: '2'
                        amount_2x: '13'
                        amount_3x: '3'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Pizza (selfmade)'
    post:
      summary: 'Create selfmade pizza'
      description: "Use this when user makes a selfmade pizza\n<aside class=\"success\">Send id of selfmade's items in array</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  name: exercitationem
                  price: 4
                  selfmades:
                    -
                      id: 1
                      category: topping
                      image: 'http://127.0.0.1:8000/storage/files/1649269045-111627720.png'
                      name: oninon
                      price: '17'
                      amount_1x: '2'
                      amount_2x: '13'
                      amount_3x: '3'
                    -
                      id: 2
                      category: topping
                      image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                      name: oninon
                      price: '17'
                      amount_1x: '2'
                      amount_2x: '13'
                      amount_3x: '3'
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: exercitationem
                  price:
                    type: integer
                    example: 4
                  selfmades:
                    type: array
                    example:
                      -
                        id: 1
                        category: topping
                        image: 'http://127.0.0.1:8000/storage/files/1649269045-111627720.png'
                        name: oninon
                        price: '17'
                        amount_1x: '2'
                        amount_2x: '13'
                        amount_3x: '3'
                      -
                        id: 2
                        category: topping
                        image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                        name: oninon
                        price: '17'
                        amount_1x: '2'
                        amount_2x: '13'
                        amount_3x: '3'
                    items:
                      type: object
        401:
          description: Unauthenticated
          content:
            text/plain:
              schema:
                type: string
                example: "{\"message\": \"Unauthenticated.\"}\n\n* @response status=422 scenario=\"validation error\"\n{\n\"message\": \"The selfmades field is required.\",\n\"errors\": {\n\"selfmades\": [\n\"The selfmades field is required.\"\n]\n}\n}"
      tags:
        - 'Pizza (selfmade)'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                name:
                  type: string
                  description: ''
                  example: accusamus
                selfmades:
                  type: array
                  description: ''
                  example:
                    - iusto
                  items:
                    type: string
              required:
                - name
                - selfmades
  '/api/pizza/{id}':
    get:
      summary: 'Show One selfmade pizza'
      description: 'This endpoint shows One selfmade pizza'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: soluta
                    price: '5'
                    selfmades:
                      -
                        id: 1
                        category: topping
                        image: 'http://127.0.0.1:8000/storage/files/1649269045-111627720.png'
                        name: oninon
                        price: '17'
                        amount_1x: '2'
                        amount_2x: '13'
                        amount_3x: '3'
                      -
                        id: 2
                        category: topping
                        image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                        name: oninon
                        price: '17'
                        amount_1x: '2'
                        amount_2x: '13'
                        amount_3x: '3'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Pizza (selfmade)'
    delete:
      summary: 'Delete One selfmade pizza'
      description: 'This endpoint deletes One selfmade pizza'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'pizza deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'pizza deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Pizza (selfmade)'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pizza.'
        example: 17
        required: true
        schema:
          type: integer
  /api/selfmade:
    get:
      summary: 'Show all self made''s categoty'
      description: 'This endpoint Shows all self made''s categoty with image like cheese'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: 'http://127.0.0.1:8000/storage/files/1649266130-257876169.png'
                    name: topping
                  -
                    id: 2
                    image: 'http://127.0.0.1:8000/storage/files/1649266284-1299351634.png'
                    name: topping
                  -
                    id: 3
                    image: 'http://127.0.0.1:8000/storage/files/1649266590-1689863156.png'
                    name: topping
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Self made'
  '/api/selfmade/{id}':
    get:
      summary: 'Show self mades of a category'
      description: "This endpoint sends you self mades of the specific category.\n<aside class=\"success\">Send category's id.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    category: topping
                    image: 'http://127.0.0.1:8000/storage/files/1649269045-111627720.png'
                    name: oninon
                    price: '17'
                    amount_1x: '2'
                    amount_2x: '13'
                    amount_3x: '3'
                  -
                    id: 2
                    category: topping
                    image: 'http://127.0.0.1:8000/storage/files/1649269072-916395255.png'
                    name: oninon
                    price: '17'
                    amount_1x: '2'
                    amount_2x: '13'
                    amount_3x: '3'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'Self made'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the selfmade.'
        example: 13
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      description: 'Login with email or phone'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: 'token = "TOKEN_EXAMPLE"'
        403:
          description: 'Not Verify'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'your account is not verify , the code has been sent to your phone and your email'
                properties:
                  message:
                    type: string
                    example: 'your account is not verify , the code has been sent to your phone and your email'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected phone is invalid.'
                  errors:
                    phone:
                      - 'The selected phone is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected phone is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected phone is invalid.'
        400:
          description: 'wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'wrong password'
                properties:
                  message:
                    type: string
                    example: 'wrong password'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'This field is required when none of <code>email</code> are present.'
                  example: null
                email:
                  type: string
                  description: 'This field is required when none of <code>phone</code> are present.'
                  example: null
                password:
                  type: string
                  description: ''
                  example: veritatis
              required:
                - password
      security: []
  /api/register:
    post:
      summary: Register
      description: 'This endpoint creates one user'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: 'token = "TOKEN_EXAMPLE"'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    country_id:
                      - 'The selected country id is invalid.'
                    password:
                      - 'The password must be at least 8.'
                    re_try_Password:
                      - 'The re try  password and password must match.'
                properties:
                  message:
                    type: string
                    example: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    type: object
                    example:
                      country_id:
                        - 'The selected country id is invalid.'
                      password:
                        - 'The password must be at least 8.'
                      re_try_Password:
                        - 'The re try  password and password must match.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quis
                phone:
                  type: integer
                  description: 'This field is required when none of <code>email</code> are present.'
                  example: 10
                email:
                  type: string
                  description: 'This field is required when none of <code>phone</code> are present.  Must be a valid email address.'
                  example: mlang@example.org
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                country_id:
                  type: integer
                  description: ''
                  example: 1
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: w
                re_try_Password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: eius
              required:
                - name
                - country_id
                - password
                - re_try_Password
      security: []
  /api/edit_user:
    post:
      summary: 'Edit User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  image: ''
                  name: zeinab
                  phone: '9129612721'
                  email: zeinab@gmail.com
                  orders: []
                properties:
                  id:
                    type: integer
                    example: 2
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zeinab
                  phone:
                    type: string
                    example: '9129612721'
                  email:
                    type: string
                    example: zeinab@gmail.com
                  orders:
                    type: array
                    example: []
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    country_id:
                      - 'The selected country id is invalid.'
                    password:
                      - 'The password must be at least 8.'
                    re_try_Password:
                      - 'The re try  password and password must match.'
                properties:
                  message:
                    type: string
                    example: 'The selected country id is invalid. (and 2 more errors)'
                  errors:
                    type: object
                    example:
                      country_id:
                        - 'The selected country id is invalid.'
                      password:
                        - 'The password must be at least 8.'
                      re_try_Password:
                        - 'The re try  password and password must match.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                phone:
                  type: integer
                  description: ''
                  example: 2
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: stevie36@example.org
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                country_id:
                  type: integer
                  description: ''
                  example: 17
  '/api/verify_email/{code}':
    get:
      summary: 'Verify email'
      description: 'Verify email'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: 'email verified successfully'
        400:
          description: 'Not Correct'
          content:
            text/plain:
              schema:
                type: string
                example: 'The code is not correct'
      tags:
        - Verify
      security: []
    parameters:
      -
        in: path
        name: code
        description: ''
        example: magni
        required: true
        schema:
          type: string
  /api/verify_phone:
    post:
      summary: 'Verify Phone'
      description: 'Verify phone'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: 'phone verified successfully'
        400:
          description: 'Not Correct'
          content:
            text/plain:
              schema:
                type: string
                example: 'The code is not correct'
      tags:
        - Verify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  description: ''
                  example: 11
                code:
                  type: string
                  description: ''
                  example: rem
              required:
                - phone
                - code
      security: []
  /api/admin/login:
    post:
      summary: 'Login Admin'
      description: 'Login with phone and password'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: 'token = "TOKEN_EXAMPLE"'
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected phone is invalid.'
                  errors:
                    phone:
                      - 'The selected phone is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected phone is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected phone is invalid.'
      tags:
        - 'panel Admin'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  description: ''
                  example: 8
                password:
                  type: string
                  description: ''
                  example: accusantium
              required:
                - phone
                - password
      security: []
  /api/panel/admin:
    get:
      summary: 'Show All Admins'
      description: ''
      parameters:
        -
          in: query
          name: count
          description: ''
          example: eaque
          required: false
          schema:
            type: string
            description: ''
            example: eaque
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    image: ''
                    name: zzz
                    phone: '8129612721'
                    role: edit
                    country_id: 1
                  -
                    id: 2
                    image: ''
                    name: zzz
                    phone: '0933333333'
                    role: edit
                    country_id: 1
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Admin'
    post:
      summary: 'create one admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: ''
                  name: zzz
                  phone: '8129612721'
                  role: edit
                  country_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zzz
                  phone:
                    type: string
                    example: '8129612721'
                  role:
                    type: string
                    example: edit
                  country_id:
                    type: integer
                    example: 1
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected phone is invalid.'
                  errors:
                    phone:
                      - 'The selected phone is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected phone is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected phone is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Admin'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  description: ''
                  example: 20
                name:
                  type: string
                  description: ''
                  example: quidem
                role:
                  type: string
                  description: 'Must be one of <code>see</code>, <code>edit</code>, or <code>none</code>.'
                  example: edit
                password:
                  type: string
                  description: ''
                  example: adipisci
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                country_id:
                  type: integer
                  description: ''
                  example: 17
              required:
                - phone
                - name
                - role
                - password
                - country_id
  '/api/panel/admin/{id}':
    get:
      summary: 'Show one admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: ''
                  name: zzz
                  phone: '8129612721'
                  role: edit
                  country_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zzz
                  phone:
                    type: string
                    example: '8129612721'
                  role:
                    type: string
                    example: edit
                  country_id:
                    type: integer
                    example: 1
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Admin'
    put:
      summary: 'Edit Admin'
      description: 'This endpoint Edits one admin'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  image: ''
                  name: zzz
                  phone: '8129612721'
                  role: edit
                  country_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: zzz
                  phone:
                    type: string
                    example: '8129612721'
                  role:
                    type: string
                    example: edit
                  country_id:
                    type: integer
                    example: 1
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected phone is invalid.'
                  errors:
                    phone:
                      - 'The selected phone is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected phone is invalid.'
                  errors:
                    type: object
                    example:
                      phone:
                        - 'The selected phone is invalid.'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Admin'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: ''
                  example: null
                name:
                  type: string
                  description: ''
                  example: null
                role:
                  type: string
                  description: 'Must be one of <code>see</code>, <code>edit</code>, or <code>none</code>.'
                  example: edit
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                country_id:
                  type: integer
                  description: ''
                  example: 15
    delete:
      summary: 'Delete Admin'
      description: "This endpoint Deletes one admin\n<aside class=\"success\">Send admin's id</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'admin deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'admin deleted successfully'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
      tags:
        - 'panel Admin'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the admin.'
        example: 20
        required: true
        schema:
          type: integer
  /api/panel/orders:
    get:
      summary: 'Show All Orders'
      description: "If you want a certain number of it use \"count\" in url params\nlike this :\nalso for \"search\" and \"status filter\"\n <aside class=\"success\">{url}/api/panel/orders?count=5&search=hello&status=pending</aside>\n\n <aside class=\"warning\">status should be one of these : ['pending' , 'sent' , 'rejected']</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "[\n{\n\"id\": 3,\n\"client_id\": 1,\n\"is_pay\": false,\n\"total_price\": 0,\n\"status\": null,\n\"address\": {\n\"id\": 1,\n\"client_id\": 1,\n\"title\": \"home\",\n\"address\": \"USA , NY\",\n\"lat_lng\": \"\"\n},\n\"carts\": []\n},]"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Orders'
  '/api/panel/orders/{id}':
    get:
      summary: 'Show one order'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  client_id: 1
                  is_pay: false
                  total_price: 0
                  status: null
                  address:
                    id: 1
                    client_id: 1
                    title: home
                    address: 'USA , NY'
                    lat_lng: ''
                  carts: []
                properties:
                  id:
                    type: integer
                    example: 3
                  client_id:
                    type: integer
                    example: 1
                  is_pay:
                    type: boolean
                    example: false
                  total_price:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: null
                  address:
                    type: object
                    example:
                      id: 1
                      client_id: 1
                      title: home
                      address: 'USA , NY'
                      lat_lng: ''
                  carts:
                    type: array
                    example: []
        404:
          description: 'not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found!'
                properties:
                  message:
                    type: string
                    example: 'Not Found!'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Orders'
    put:
      summary: 'Change order status'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  client_id: 1
                  is_pay: false
                  total_price: 0
                  status: null
                  address:
                    id: 1
                    client_id: 1
                    title: home
                    address: 'USA , NY'
                    lat_lng: ''
                  carts: []
                properties:
                  id:
                    type: integer
                    example: 3
                  client_id:
                    type: integer
                    example: 1
                  is_pay:
                    type: boolean
                    example: false
                  total_price:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: null
                  address:
                    type: object
                    example:
                      id: 1
                      client_id: 1
                      title: home
                      address: 'USA , NY'
                      lat_lng: ''
                  carts:
                    type: array
                    example: []
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: 'not allowed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Allowed.'
                properties:
                  message:
                    type: string
                    example: 'Not Allowed.'
      tags:
        - 'panel Orders'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>pending</code>, <code>sent</code>, or <code>rejected</code>.'
                  example: pending
              required:
                - status
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 4
        required: true
        schema:
          type: integer
  /api/panel/sell:
    get:
      summary: Sell
      description: 'show sell records'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  day_of_week_number:
                    -
                      Saturday:
                        sells: 1
                    -
                      Thursday:
                        sells: 2
                  most_sell_of_week:
                    amount: 225
                    day: Saturday
                  least_sell_of_week:
                    amount: 30
                    day: Thursday
                  most_item_sell:
                    item:
                      id: 1
                      category: pizza
                      image: 'http://127.0.0.1:8000/storage/'
                      available: true
                      name: peperroni
                      price: '25'
                      description: 'so good'
                    count: 9
                  least_item_sell:
                    item:
                      id: 2
                      category: pizza
                      image: 'http://127.0.0.1:8000/storage/'
                      available: true
                      name: sesar
                      price: '5'
                      description: 'very bad'
                    count: 6
                  most_3_item_sell:
                    -
                      item:
                        id: 1
                        category: pizza
                        image: 'http://127.0.0.1:8000/storage/'
                        available: true
                        name: peperroni
                        price: '25'
                        description: 'so good'
                      count: 9
                    -
                      item:
                        id: 2
                        category: pizza
                        image: 'http://127.0.0.1:8000/storage/'
                        available: true
                        name: sesar
                        price: '5'
                        description: 'very bad'
                      count: 6
                properties:
                  day_of_week_number:
                    type: array
                    example:
                      -
                        Saturday:
                          sells: 1
                      -
                        Thursday:
                          sells: 2
                    items:
                      type: object
                  most_sell_of_week:
                    type: object
                    example:
                      amount: 225
                      day: Saturday
                  least_sell_of_week:
                    type: object
                    example:
                      amount: 30
                      day: Thursday
                  most_item_sell:
                    type: object
                    example:
                      item:
                        id: 1
                        category: pizza
                        image: 'http://127.0.0.1:8000/storage/'
                        available: true
                        name: peperroni
                        price: '25'
                        description: 'so good'
                      count: 9
                  least_item_sell:
                    type: object
                    example:
                      item:
                        id: 2
                        category: pizza
                        image: 'http://127.0.0.1:8000/storage/'
                        available: true
                        name: sesar
                        price: '5'
                        description: 'very bad'
                      count: 6
                  most_3_item_sell:
                    type: array
                    example:
                      -
                        item:
                          id: 1
                          category: pizza
                          image: 'http://127.0.0.1:8000/storage/'
                          available: true
                          name: peperroni
                          price: '25'
                          description: 'so good'
                        count: 9
                      -
                        item:
                          id: 2
                          category: pizza
                          image: 'http://127.0.0.1:8000/storage/'
                          available: true
                          name: sesar
                          price: '5'
                          description: 'very bad'
                        count: 6
                    items:
                      type: object
      tags:
        - 'panel Sell'
tags:
  -
    name: Addresses
    description: "\nAPIs for user's addresses"
  -
    name: Cart
    description: "\nAPIs for managing carts"
  -
    name: Favorite
    description: "\nAPIs for Favorite"
  -
    name: Landing
    description: ''
  -
    name: Menu
    description: "\nAPIs for Menu"
  -
    name: 'Menu category'
    description: "\nAPIs for Menu's category"
  -
    name: Order
    description: "\nAPIs for Orders"
  -
    name: 'Panel All Users'
    description: ''
  -
    name: 'Panel Content'
    description: ''
  -
    name: 'Panel Country'
    description: "\nAPIs for managing Countries"
  -
    name: 'Panel Ingredient'
    description: ''
  -
    name: 'Panel Ingredient Category'
    description: ''
  -
    name: 'Panel Menu'
    description: ''
  -
    name: 'Panel Menu Category'
    description: ''
  -
    name: 'Panel Selfmade'
    description: ''
  -
    name: 'Panel Selfmade Category'
    description: ''
  -
    name: 'Panel Users'
    description: ''
  -
    name: Password
    description: "\nAPIs for  Password"
  -
    name: 'Pizza (selfmade)'
    description: "\nAPIs for create selfmade pizza"
  -
    name: 'Self made'
    description: "\nAPIs for Self made"
  -
    name: Users
    description: "\nAPIs for managing users"
  -
    name: Verify
    description: "\nAPIs for Verification"
  -
    name: 'panel Admin'
    description: ''
  -
    name: 'panel Orders'
    description: ''
  -
    name: 'panel Sell'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
