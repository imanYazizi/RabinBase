## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Panel Ingredient Category'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/panel/ingredient_category
    metadata:
      title: 'Show All ingredient''s Category'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          [
          {
          "id": 1,
          "image": "http://127.0.0.1:8000/storage/files/1649266130-257876169.png",
          "name": "topping"
          },
          {
          "id": 2,
          "image": "http://127.0.0.1:8000/storage/files/1649266284-1299351634.png",
          "name": "topping"
          },
          {
          "id": 3,
          "image": "http://127.0.0.1:8000/storage/files/1649266590-1689863156.png",
          "name": "topping"
          }
          ]
        headers: []
        description: '200, success'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: '{"message": "Not Allowed."}'
        headers: []
        description: '403, not allowed'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/panel/ingredient_category
    metadata:
      title: 'Create ingredient category'
      description: 'this will create a category in ingredient'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image.'
        required: true
        example: null
        type: file
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: numquam
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 2,
          "image": "http://127.0.0.1:8000/storage/files/1649266284-1299351634.png",
          "name": "topping"
          }
        headers: []
        description: '200, success'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: '{"message": "Not Allowed."}'
        headers: []
        description: '403, not allowed'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/panel/ingredient_category/{id}'
    metadata:
      title: 'Show one ingredient''s category'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ingredient category.'
        required: true
        example: culpa
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "image": "http://127.0.0.1:8000/storage/files/1649266130-257876169.png",
          "name": "topping"
          }
        headers: []
        description: '200, success'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: '{"message": "Not Allowed."}'
        headers: []
        description: '403, not allowed'
      -
        status: 404
        content: '{"message": "Not Found!"}'
        headers: []
        description: '404, not found'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/panel/ingredient_category/{id}'
    metadata:
      title: 'Edit ingredient''s category'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ingredient category.'
        required: true
        example: aut
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "image": "http://127.0.0.1:8000/storage/files/1649266130-257876169.png",
          "name": "topping"
          }
        headers: []
        description: '200, success'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: '{"message": "Not Allowed."}'
        headers: []
        description: '403, not allowed'
      -
        status: 404
        content: '{"message": "Not Found!"}'
        headers: []
        description: '404, not found'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/panel/ingredient_category/{id}'
    metadata:
      title: 'Delete ingredient''s category'
      description: '@response scenario=success {"message" : "ingredient category deleted successfully"}'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ingredient category.'
        required: true
        example: ullam
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: '{"message": "Not Allowed."}'
        headers: []
        description: '403, not allowed'
      -
        status: 404
        content: '{"message": "Not Found!"}'
        headers: []
        description: '404, not found'
    responseFields: []
