## Autogenerated by Scribe. DO NOT MODIFY.

name: Password
description: |-

  APIs for  Password
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/change_password/{reset_link}'
    metadata:
      title: 'Change Password'
      description: 'send reset link with new password and confirm password'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      reset_link:
        name: reset_link
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      new_password:
        name: new_password
        description: 'Must be at least 8 characters.'
        required: true
        example: fpbcgoff
        type: string
        custom: []
      confirm_password:
        name: confirm_password
        description: 'The value and <code>new_password</code> must match.'
        required: true
        example: excepturi
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "message" : "password changed successfully" }'
        headers: []
        description: '200, success'
      -
        status: 404
        content: 'user not found (wrong reset link)'
        headers: []
        description: '404, user not found (wrong reset link)'
      -
        status: 422
        content: |-
          {
          "message": "The new password must be at least 8. (and 1 more error)",
          "errors": {
          "new_password": [
          "The new password must be at least 8."
          ],
          "confirm_password": [
          "The confirm password and password must match."
          ]
          }
          }
        headers: []
        description: '422, validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/forget_password
    metadata:
      title: 'Forget password'
      description: 'send link for forget password'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: 'This field is required when none of <code>email</code> are present.'
        required: false
        example: null
        type: string
        custom: []
      email:
        name: email
        description: 'This field is required when none of <code>phone</code> are present.'
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message" :''reset link sent successfully''}'
        headers: []
        description: '200, success'
      -
        status: 422
        content: |-
          {
          "message": "The selected email is invalid.",
          "errors": {
          "email": [
          "The selected email is invalid."
          ]
          }
          }
        headers: []
        description: '422, validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/current_password
    metadata:
      title: 'Current password'
      description: |-
        Check if current password is correct
        <aside class="success">if password is correct this will send you a link that you should use in change_password</aside>
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '"reset_link": "WbEITkE4xx"}'
        headers: []
        description: '200, success{'
      -
        status: 400
        content: '{"message": "wrong password"}'
        headers: []
        description: '400, wrong password'
    responseFields: []
