name: Favorite
description: |-

  APIs for Favorite
endpoints:
  -
    httpMethods:
      - GET
    uri: api/favorite
    metadata:
      title: 'Show All Favorites'
      description: 'This endpoint shows all of the items that is favorite'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          [
          {
          "id": 1,
          "is_menu": true,
          "item_id": {
          "id": 2,
          "item_category_id": 1,
          "image": "mknjbh",
          "available": 1,
          "name": "peperoni",
          "price": "5",
          "description": ";.'lkjihugjhg",
          "created_at": null,
          "updated_at": null,
          "deleted_at": null
          }
          },
          {
          "id": 2,
          "is_menu": true,
          "item_id": {
          "id": 2,
          "item_category_id": 1,
          "image": "mknjbh",
          "available": 1,
          "name": "peperoni",
          "price": "5",
          "description": ";.'lkjihugjhg",
          "created_at": null,
          "updated_at": null,
          "deleted_at": null
          }
          }
          ]
        headers: []
        description: '200, success'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/favorite
    metadata:
      title: 'Favorite An Item'
      description: |-
        This endpoint favorites an item (Menu item or selfmade pizza)
         <aside class="success">for selfmade send pizza_id
        an if it's menu item send item_id</aside>
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      pizza_id:
        name: pizza_id
        description: 'This field is required when none of <code>item_id</code> are present.'
        required: false
        example: null
        type: string
        custom: []
      item_id:
        name: item_id
        description: 'This field is required when none of <code>pizza_id</code> are present.'
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 2,
          "is_menu": true,
          "item_id": {
          "id": 2,
          "item_category_id": 1,
          "image": "mknjbh",
          "available": 1,
          "name": "peperoni",
          "price": "5",
          "description": ";.'lkjihugjhg",
          "created_at": null,
          "updated_at": null,
          "deleted_at": null
          }
          }
        headers: []
        description: '200, success'
      -
        status: 422
        content: |-
          {
          "message": "The pizza id field is required when none of item id are present. (and 1 more error)",
          "errors": {
          "pizza_id": [
          "The pizza id field is required when none of item id are present."
          ],
          "item_id": [
          "The item id field is required when none of pizza id are present."
          ]
          }
          }
        headers: []
        description: '422, validation error'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/favorite/{id}'
    metadata:
      title: 'Unfavorite An Item'
      description: 'This endpoint unfavorites an item (send favorite''s id)'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the favorite.'
        required: true
        example: 4
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message" : "item unfavorited successfully"}'
        headers: []
        description: '200, success'
      -
        status: 404
        content: '{"message": "Not Found!"}'
        headers: []
        description: '404, not found'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401, Unauthenticated'
    responseFields: []
