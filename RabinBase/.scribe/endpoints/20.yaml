name: Users
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: Login
      description: 'Login with email or phone'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: 'This field is required when none of <code>email</code> are present.'
        required: false
        example: null
        type: string
        custom: []
      email:
        name: email
        description: 'This field is required when none of <code>phone</code> are present.'
        required: false
        example: null
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: veritatis
        type: string
        custom: []
    responses:
      -
        status: 200
        content: 'token = "TOKEN_EXAMPLE"'
        headers: []
        description: '200, success'
      -
        status: 403
        content: '{"message": "your account is not verify , the code has been sent to your phone and your email"}'
        headers: []
        description: '403, Not Verify'
      -
        status: 422
        content: '{"message": "The selected phone is invalid.","errors": {"phone": ["The selected phone is invalid."]}}'
        headers: []
        description: '422, validation error'
      -
        status: 400
        content: '{"message": "wrong password"}'
        headers: []
        description: '400, wrong password'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: Register
      description: 'This endpoint creates one user'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      phone:
        name: phone
        description: 'This field is required when none of <code>email</code> are present.'
        required: false
        example: 10
        type: integer
        custom: []
      email:
        name: email
        description: 'This field is required when none of <code>phone</code> are present.  Must be a valid email address.'
        required: false
        example: mlang@example.org
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      country_id:
        name: country_id
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: w
        type: string
        custom: []
      re_try_Password:
        name: re_try_Password
        description: 'The value and <code>password</code> must match.'
        required: true
        example: eius
        type: string
        custom: []
    responses:
      -
        status: 200
        content: 'token = "TOKEN_EXAMPLE"'
        headers: []
        description: '200, success'
      -
        status: 422
        content: '{"message": "The selected country id is invalid. (and 2 more errors)","errors": {"country_id": ["The selected country id is invalid."],"password": ["The password must be at least 8."],"re_try_Password": ["The re try  password and password must match."]}}'
        headers: []
        description: '422, validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/edit_user
    metadata:
      title: 'Edit User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: false
        example: 2
        type: integer
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: stevie36@example.org
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      country_id:
        name: country_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 2,
          "image": "",
          "name": "zeinab",
          "phone": "9129612721",
          "email": "zeinab@gmail.com",
          "orders": []
          }
        headers: []
        description: '200, success'
      -
        status: 422
        content: '{"message": "The selected country id is invalid. (and 2 more errors)","errors": {"country_id": ["The selected country id is invalid."],"password": ["The password must be at least 8."],"re_try_Password": ["The re try  password and password must match."]}}'
        headers: []
        description: '422, validation error'
    responseFields: []
